# برنامه نویسی پایتون {#programming-python}

برای اینکه بتوانیم مهارت خوبی در برنامه‌نویسی بدست آوریم، 
دو نکته را در نظر داشته باشیم:

- اول اینکه باید با زبان برنامه‌نویسی موردنظر خود آشنا شویم
یعنی لغات رزرو شده
[(Reserved Words)]{dir=ltr}
و گرامر زبان برنامه‌نویسی

خوب است بدانیم برای هر زبان برنامه‌نویسی، لغاتی هستند که مفهوم خاصی داشته و 
کاربر برنامه‌نویس نمی‌تواند از آن‌ها برای منظور و کاربرد دیگری استفاده نماید.
درعین حال، هر برنامه‌نویسی می‌تواند لغات خاص منظوره خود را به مفسر زبان
برنامه‌نویسی خود معرفی کند. یکی از روش‌های انجام این کار، تعریف متغیر 
[(Variable)]{dir=ltr}
 است.
 کلمات رزرو شده توسط پایتون، شامل موارد ذیل می‌شوند: 

::: {dir=ltr} :::
|   |   |   |   |   |
|:- |:- |:- |:- |:- |
| `and` | `as` | `assert` | `break` | `class` |
| `continue` | `def` | `del` | `elif` | `else` |
| `except` | `finally` | `for` | `from` | `global` |
| `if` | `in` | `is` | `import` | `lambda` |
| `nonlocal` | `not` | `or` |`pass` | `raise` |
| `return` | `try` | `while` | `with` | `yield` |
::::::

- دوم اینکه، بتوانیم یک داستان بگوئیم!

در واقع هنر حل مسئله، اصلی‌ترین مهارت یک برنامه‌نویس محسوب می‌شود.
با کسب این مهارت، می‌توانیم زبان‌های برنامه‌نویسی دوم به بعد را راحت‌تر بیاموزیم.

پس برای شروع، ما شروع به خواندن و توضیح برنامه‌ها می‌کنیم،
آنگاه برنامه‌های ساده‌ می نویسیم، و سپس برنامه‌های پیچیده‌تر را در طول زمان می‌نویسیم. 
اگر خوب پیش برویم، خواهیم توانست روش و یا الگوریتم حل مسئله را از دیدگاه خودمان بنویسیم 
و آنگاه به مرور، مهارت حل خلاقانه مسئله را بدست خواهیم آورد.


## نصب  پایتون و اجرای کد

[[https://www.python.org/]{dir=ltr}](https://www.python.org/)

```bash
python --version
```
```
Python 3.10.12
```

## نصب IDE


![نظر سنجی ۲۰۲۳ از توسعه دهندگان درباره محیط توسعه یکپارچه [@stackoverflow-survey]](../assets/img/ide.png)


برای نوشتن، اجرا و خروجی گرفتن بهتر می‌توانید از یک نرم افزار 
**IDE** [(Integrated Development Environment)]{dir=ltr}
استفاده کنید.
  
- نصب **VSCode** از **<https://code.visualstudio.com/>**
- نصب [**Jupyter**]{dir=ltr} از **<https://jupyter.org>**


## مترجم و کامپایلر {#interpreter-and-compiler}

پایتون یک **زبان سطح بالا** محسوب می‌شود. به این معنی که به زبان انسان نزدیک‌تر است 
تا به زبان سخت‌افزار کامپیوتر.
اما مفهوم دستورات زبان‌های سطح بالا توسط 
CPU
قابل فهم نیست. چرا که 
CPU
فقط دستوراتی که به **زبان ماشین**  نوشته شده باشند را درک می‌کند.
زبان ماشین از دو نشانه `0` و `1` تشکیل شده است و 
CPU
قادر است تنها همین زبان را بفهمد و دستورات آن را اجرا کند:

```
00101000111010010010101000000111
11100110000011101010010101101101
...
```

پس برنامه‌های زبان‌های سطح بالایی مثل پایتون را چگونه باید برای 
CPU
شرح داد؟

مترجم‌های متعددی برای ترجمه و تبدیل کدهای زبان سطح بالا به زبان سطح ماشین، وجود دارد.
اما از آن‌جایی که زبان ماشین کاملا وابسته به سخت‌افزار کامپیوتر است، 
بنابراین ما یک زبان ماشین که بتواند با انواع سخت‌افزار هماهنگ شود را نداریم. 
برنامه‌های نوشته شده به زبان‌های سطح بالا را می‌توان با استفاده از یک مفسر متفاوت
 در ماشین (همان سخت‌افزار) جدید یا کامپایل مجدد کد برای ایجاد نسخه زبان ماشین 
 برنامه موردنظر برای ماشین جدید بین رایانه های مختلف جابجا کرد.
 
 این مترجمان زبان برنامه‌نویسی به دو دسته کلی تقسیم می شوند:
 
1. مفسر [(Interpreter)]{dir=ltr} 
2. کامپایلر [(Compiler)]{dir=ltr}
 
 یک **مفسر** کد برنامه نوشته شده توسط برنامه‌نویس را خوانده، آن را تجزیه 
 می‌کند و دستورالعمل‌ها را تفسیر می‌نماید. 
 با این توصیف، پایتون یک مفسر محسوب می‌شود که کدهای برنامه ما رافوراً پردازش می‌کند. 
 

## سایت‌های مفید

- استفاده از سایت گوگل
([**www.google.com**](https://www.google.com/))

::: {.remark} :::
 بهترین مهارت برای یک برنامه نویس مهارت گوگل کردن است.
::::::

- پرسیدن و جستجوی سوالات در سایت 
([**stackoverflow.com**](https://stackoverflow.com/))

::: {.remark} :::
سعی کنید در ابتدای کار کل کدها را تایپ کنید و بدون فهم درست از کدها چیزی را کپی نکنید.
::::::


- استفاده از هوش مصنوعی 
  - [**chat GPT**](https://chat.openai.com/)
  - [**Gemeni**](https://gemini.google.com/)
  - [**Codeium**](https://codeium.com/)

::: {.remark} :::
در استفاده از هوش مصنوعی افراطی عمل نکنید و نسبت به عملکرد کدها اطمینان حاصل فرمایید.
::::::

::: {.remark} :::
برای عبور از مشکلات تحریمی میتوانید از دی ان اس های سایت شکن استفاده نمایید.
::::::

## تمرین

![منحنی یادگیری ابزارهای آماری [@nyu-statsoft]](../assets/img/LearningCurve_SPSS-Stata-SAS-JMP-R-Matlab.png)


برای تمرین بیشتر می‌توانید 
از سایت‌هایی که تمرینات
**python**
ارائه می‌دهند استفاده کنید.

با جستجو 
[**python exercises with solutions**]{dir=ltr}
در گوگل به سایت‌های زیر دسترسی پیدا می‌کنید


- [کوئرا](https://quera.org/problemset?order=most-solutions)
- [Code Wars](https://www.codewars.com/dashboard)
- [W3Schools](https://www.w3schools.com/python/default.asp)
- [LeetCode](https://leetcode.com/)
- کمک کردن به دیگران
- مشارکت در پروژه‌ی دیگران

## پروژه

برای اینکه کمی یادگیری جذاب‌تر شود یک سری پروژه در پایتون پیاده سازی کنید.

پیش نیاز‌ها را در ترمینال یا کنسول اجرا کنید:

- نصب پیکیج‌های مورد نیاز:

```bash
pip install pyinstaller
```

- برای تبدیل فایل‌های پایتون به فایل اجرایی در ویندوز از کد زیر استفاده کنید.

```bash
pyinstaller --onefile --noconsole myproject.py
```
[`--onefile`]{dir=ltr}: فقط یه فایل خروجی بسازه (نه یه پوشه‌ی پر از فایل)

[`--noconsole`]{dir=ltr}: چون برنامه گرافیکی‌ـه و به پنجره‌ی ترمینال نیازی نداره

- ساختار پروژه:

```
my_project_folder/
│
├── myproject.py
├── build/
├── dist/
│   └── myproject.exe  ✅✅✅ اینه فایل اجرایی!

```